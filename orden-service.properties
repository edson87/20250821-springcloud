server.port=8094

spring.datasource.url=jdbc:h2:mem:storeorder
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.hibernate.ddl-auto=update

##archivos de soporte de resilience4j
resilience4j.circuitbreaker.instances.productServiceCB.register-health-indicator=true
resilience4j.circuitbreaker.instances.productServiceCB.sliding-window-size=10
resilience4j.circuitbreaker.instances.productServiceCB.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.productServiceCB.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.productServiceCB.wait-duration-in-open-state=1m
resilience4j.circuitbreaker.instances.productServiceCB.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.productServiceCB.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.productServiceCB.max-wait-duration-in-half-open-state=10s
resilience4j.timelimiter.instances.productServiceCB.timeout-duration=3s

management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always

management.metrics.export.prometheus.enabled=true

##Conf. rabbit MQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=curso
spring.rabbitmq.password=curso
##RabbitMQ reintenta conectar automaticamente
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=5
spring.rabbitmq.listener.simple.retry.initial-interval=2000

##zipking
##management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
##management.tracing.enabled=true
##management.tracing.sampling.probability=1.0
##Formato del log
##logging.pattern.correlation=[${spring.application.name},%X{traceId:-},%X{spanId:-}]
##evita que se nombre de nuevo
##logging.include-application-name=false

##Kafka conf
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=producto-group 
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*





